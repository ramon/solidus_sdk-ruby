=begin
#Solidus API

#The standard Solidus API.

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SolidusSdk::PaymentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PaymentsApi' do
  before do
    # run before each test
    @api_instance = SolidusSdk::PaymentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PaymentsApi' do
    it 'should create an instance of PaymentsApi' do
      expect(@api_instance).to be_instance_of(SolidusSdk::PaymentsApi)
    end
  end

  # unit tests for authorize_checkout_payment
  # Authorize checkout payment
  # Authorizes a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'authorize_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for authorize_order_payment
  # Authorize order payment
  # Authorizes an order&#39;s payment.
  # @param order_number 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'authorize_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for capture_checkout_payment
  # Capture checkout payment
  # Captures a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'capture_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for capture_order_payment
  # Capture order payment
  # Captures an order&#39;s payment.
  # @param order_number 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'capture_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_checkout_payment
  # Create checkout payment
  # Creates a new payment for a checkout. Only the checkout&#39;s owner and users that can create a payment (eg. users with admin role) are allowed to perform this action.
  # @param checkout_id The order number
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCheckoutPaymentRequest] :create_checkout_payment_request This requests only accepts available Payment Methods in the &#x60;payment_method_id&#x60; field.  The Payment Methods available to users for creating a new payment are the ones with both attributes &#x60;available_to_users&#x60; and &#x60;active&#x60; set to &#x60;true&#x60;.
  # @return [Payment]
  describe 'create_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_order_payment
  # Create order payment
  # Creates a new payment for a checkout. Only the order&#39;s owner and users that can create a payment (eg. users with admin role) are allowed to perform this action.
  # @param order_number The order number
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCheckoutPaymentRequest] :create_checkout_payment_request This requests only accepts available Payment Methods in the &#x60;payment_method_id&#x60; field.  The Payment Methods available to users for creating a new payment are the ones with both attributes &#x60;available_to_users&#x60; and &#x60;active&#x60; set to &#x60;true&#x60;.
  # @return [Payment]
  describe 'create_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for credit_checkout_payment
  # Credit checkout payment
  # Credits a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'credit_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for credit_order_payment
  # Credit order payment
  # Credits an order&#39;s payment.
  # @param order_number 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'credit_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_checkout_payment
  # Get checkout payment
  # Gets a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param id The payment id
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'get_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_order_payment
  # Get order payment
  # Retrieves an orer&#39;s payment.
  # @param order_number 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_checkout_payments
  # List checkout payments
  # Lists a checkout&#39;s payments. The list of payments is only visible by the checkout&#39;s owner and by users authorized to see the order, eg. users with admin role. 
  # @param checkout_id The order number
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @return [ListCheckoutPayments200Response]
  describe 'list_checkout_payments test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_order_payments
  # List order payments
  # Lists an order&#39;s payments.
  # @param order_number The order number
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @return [ListCheckoutPayments200Response]
  describe 'list_order_payments test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for purchase_checkout_payment
  # Purchase checkout payment
  # Purchases a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'purchase_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for purchase_order_payment
  # Purchase order payment
  # Purchases an order&#39;s payment.
  # @param order_number 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'purchase_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_checkout_payment
  # Update checkout payment
  # Updates a checkout&#39;s payment. Please note that this action can be done by users with the admin permissions on Payments (eg. users with the admin role). Only pending payment can be updated. 
  # @param checkout_id The order number
  # @param id The payment id
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCheckoutPaymentRequest] :create_checkout_payment_request 
  # @return [Payment]
  describe 'update_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_order_payment
  # Update order payment
  # Updates a checkout&#39;s payment. Please note that this action can be done by users with the admin permissions on Payments (eg. users with the admin role). Only pending payment can be updated. 
  # @param order_number 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCheckoutPaymentRequest] :create_checkout_payment_request 
  # @return [Payment]
  describe 'update_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for void_checkout_payment
  # Void checkout payment
  # Voids a checkout&#39;s payment.
  # @param checkout_id The order number
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'void_checkout_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for void_order_payment
  # Void order payment
  # Voids an order&#39;s payment.
  # @param order_number 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'void_order_payment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
