=begin
#Solidus API

#The standard Solidus API.

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SolidusSdk::VariantsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VariantsApi' do
  before do
    # run before each test
    @api_instance = SolidusSdk::VariantsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VariantsApi' do
    it 'should create an instance of VariantsApi' do
      expect(@api_instance).to be_instance_of(SolidusSdk::VariantsApi)
    end
  end

  # unit tests for create_product_variant
  # Create product variant
  # Creates a variant for a product.
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductVariantRequest] :create_product_variant_request 
  # @return [Variant]
  describe 'create_product_variant test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_variant
  # Delete variant
  # Deletes a variant.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Variant]
  describe 'delete_variant test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_variant
  # Get variant
  # Retrieves a variant.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Variant]
  describe 'get_variant test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_product_variants
  # List product variants
  # Retrieves a product&#39;s variants.
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @return [ListProductVariants200Response]
  describe 'list_product_variants test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_variants
  # List variants
  # List variants.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @return [ListVariants200Response]
  describe 'list_variants test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_variant
  # Update variant
  # Updates a variant.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductVariantRequest] :create_product_variant_request 
  # @return [Variant]
  describe 'update_variant test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
