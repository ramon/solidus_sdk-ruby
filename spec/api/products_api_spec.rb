=begin
#Solidus API

#The standard Solidus API.

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SolidusSdk::ProductsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProductsApi' do
  before do
    # run before each test
    @api_instance = SolidusSdk::ProductsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductsApi' do
    it 'should create an instance of ProductsApi' do
      expect(@api_instance).to be_instance_of(SolidusSdk::ProductsApi)
    end
  end

  # unit tests for create_product
  # Create product
  # Creates a product.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductRequest] :create_product_request 
  # @return [Product]
  describe 'create_product test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_product
  # Delete product
  # Deletes a product.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'delete_product test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_product
  # Get product
  # Retrieves a product.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'get_product test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_products
  # List products
  # Returns a list of available products.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @return [ListProducts200Response]
  describe 'list_products test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_taxon_products
  # List taxon products
  # Lists a taxon&#39;s products.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id The id of the Taxon
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [Object] :q Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).
  # @option opts [Boolean] :simple Returns a simplified version of the JSON
  # @return [ListProducts200Response]
  describe 'list_taxon_products test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_product
  # Update product
  # Updates a product.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductRequest] :create_product_request 
  # @return [Product]
  describe 'update_product test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
