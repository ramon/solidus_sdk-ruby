=begin
#Solidus API

#The standard Solidus API.

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SolidusSdk::ImagesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ImagesApi' do
  before do
    # run before each test
    @api_instance = SolidusSdk::ImagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ImagesApi' do
    it 'should create an instance of ImagesApi' do
      expect(@api_instance).to be_instance_of(SolidusSdk::ImagesApi)
    end
  end

  # unit tests for create_product_image
  # Create product image
  # Creates an image for a product.  Only users with the &#x60;create&#x60; permission on &#x60;Spree::Image&#x60; can perform this action.
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductImageRequest] :create_product_image_request 
  # @return [Image]
  describe 'create_product_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_variant_image
  # Create variant image
  # Creates an image for a variant.  Only users with the &#x60;create&#x60; permission on &#x60;Spree::Image&#x60; can perform this action.
  # @param variant_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductImageRequest] :create_product_image_request 
  # @return [Image]
  describe 'create_variant_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_product_image
  # Delete product image
  # Deletes a product&#39;s image.
  # @param product_id The id of the Spree::Product
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @return [Image]
  describe 'delete_product_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_variant_image
  # Delete variant image
  # Deletes a variant&#39;s image.
  # @param variant_id The id of the Spree::Variant
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @return [Image]
  describe 'delete_variant_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_product_image
  # Get product image
  # Retrieves a product&#39;s image.
  # @param product_id The id of the Spree::Product
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @return [Image]
  describe 'get_product_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_variant_image
  # Get variant image
  # Retrieves a variant&#39;s image.
  # @param variant_id The id of the Spree::Variant
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @return [Image]
  describe 'get_variant_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_product_images
  # List product images
  # Retrieves a product&#39;s images.
  # @param product_id 
  # @param [Hash] opts the optional parameters
  # @return [ListProductImages200Response]
  describe 'list_product_images test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_variant_images
  # List variant images
  # Lists a variant&#39;s images.
  # @param variant_id 
  # @param [Hash] opts the optional parameters
  # @return [ListProductImages200Response]
  describe 'list_variant_images test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_product_image
  # Update product image
  # Updates a product&#39;s image.  Only users with the &#x60;update&#x60; permission on the image can perform this action.
  # @param product_id The id of the Spree::Product
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductImageRequest] :create_product_image_request 
  # @return [Image]
  describe 'update_product_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_variant_image
  # Update variant image
  # Updates a variant&#39;s image.  Only users with the &#x60;update&#x60; permission on the image can perform this action.
  # @param variant_id The id of the Spree::Variant
  # @param id The id of the Spree::Image
  # @param [Hash] opts the optional parameters
  # @option opts [CreateProductImageRequest] :create_product_image_request 
  # @return [Image]
  describe 'update_variant_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
